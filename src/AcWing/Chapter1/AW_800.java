package AcWing.Chapter1;

import AcWing.util.AWUtils;

/*
    给定两个升序排序的有序数组 A 和 B，以及一个目标值 x。

    数组下标从 0 开始。

    请你求出满足 A[i]+B[j]=x 的数对 (i,j)。

    数据保证有唯一解。

    输入格式
    第一行包含三个整数 n,m,x，分别表示 A 的长度，B 的长度以及目标值 x。

    第二行包含 n 个整数，表示数组 A。

    第三行包含 m 个整数，表示数组 B。

    输出格式
    共一行，包含两个整数 i 和 j。

    数据范围
    数组长度不超过 105。
    同一数组内元素各不相同。
    1≤数组元素≤109
    输入样例：
    4 5 6
    1 2 4 7
    3 4 6 8 9
    输出样例：
    1 1
* */
public class AW_800 {
    public static void main(String[] args) {
        int[] ints = AWUtils.intsInput();
        int n = ints[0], m = ints[1], x = ints[2];
        int[] a = AWUtils.intArrayInput(n);
        int[] b = AWUtils.intArrayInput(m);
        int[] ans = tarSum(a, b, x);
        AWUtils.printArrayInline(ans);
    }

    private static int[] tarSum(int[] a, int[] b, int x) {
        int l = 0, r = b.length - 1;
        while (l < a.length && r >= 0) {
            int curSum = a[l] + b[r];
            if (curSum == x) return new int[]{l, r};
            else if (curSum < x) l++;
            else r--;
        }
        return null;
    }
}
